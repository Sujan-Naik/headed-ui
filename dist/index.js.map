{"version":3,"sources":["../src/components/Button/primary-button.tsx","../src/components/Button/primary-button.module.css","../src/components/Accordion/primary-accordion.tsx","../src/components/Card/primary-card.tsx","../src/components/Card/primary-card.module.css","../src/components/Dialog/primary-dialog.tsx","../src/components/Dialog/primary-dialog.module.css","../src/components/Dropdown/primary-dropdown.tsx","../src/components/Dropdown/primary-dropdown.module.css","../src/components/Link/primary-link.tsx","../src/components/Link/primary-link.module.css","../src/components/Modal/primary-modal.tsx","../src/components/Modal/primary-modal.module.css","../src/components/Popover/primary-popover.tsx","../src/components/Select/primary-select.tsx","../src/components/Tabs/primary-tabs.tsx","../src/components/Tabs/primary-tabs.module.css"],"sourcesContent":["import {Button} from '@headlessui/react';\nimport React from 'react';\nimport styles from './primary-button.module.css';\n\ninterface ButtonProps {\n    children: React.ReactNode;\n    onClick?: () => void;\n    className?: string;\n}\n\nexport const PrimaryButton: React.FC<ButtonProps> = ({children, onClick, className = ''}) => {\n    return (\n        <Button\n            onClick={onClick}\n            className={`${styles['primary-button']} ${className}`}\n        >\n            {children}\n        </Button>\n    );\n};",".primary-button {\n    background-color: var(--background-secondary); /* Turquoise main color */\n    color: var(--foreground-primary);\n    border: 2vw var(--border-color);\n    border-radius: 4px;\n    padding: var(--button-padding);\n    font-size: 1rem;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n}\n\n.primary-button:hover {\n    background-color: var(--background-primary); /* Bright blue for hover */\n}","import React from 'react';\nimport {Disclosure} from '@headlessui/react';\nimport styles from './primary-accordion.module.css';\n\ninterface AccordionItemProps {\n    title: string;\n    children: React.ReactNode;\n}\n\nexport const AccordionItem: React.FC<AccordionItemProps> = ({title, children}) => (\n    <Disclosure>\n        {({open}) => (\n            <div className={styles.primaryAccordion + (open ? ' ' + styles.open : '')}>\n                <Disclosure.Button className={styles.primaryAccordionTitle}>\n                    <p>{title}</p>\n                    <p className={styles.accordionArrow}>\n                        {open ? '▲' : '▼'}\n                    </p>\n                </Disclosure.Button>\n                <Disclosure.Panel className={styles.primaryAccordionContent}>\n                    {children}\n                </Disclosure.Panel>\n            </div>\n        )}\n    </Disclosure>\n);\n\nexport const PrimaryAccordion: React.FC<{ children: React.ReactNode }> = ({children}) => {\n    return <div>{children}</div>;\n};","import React from 'react';\nimport styles from './primary-card.module.css';\n\ninterface PrimaryCardProps {\n    width?: string;\n    height?: string;\n    children: React.ReactNode;\n}\n\nexport const PrimaryCard: React.FC<PrimaryCardProps> = ({width, height, children}) => {\n    return (\n        <div\n            className={styles['primary-card']}\n            style={{width, height}}\n        >\n            {children}\n        </div>\n    );\n};",".primary-card {\n    background-color: var(#fff); /* White background */\n    color: var(--foreground-primary);\n    border: 2vw var(--border-color); /* Light gray border */\n    border-radius: 8px; /* Rounded corners */\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow */\n    padding: 16px; /* Internal spacing */\n    transition: box-shadow 0.3s; /* Smooth transition for hover effect */\n}\n\n.primary-card:hover {\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* Darker shadow on hover */\n}","import React from 'react';\nimport {Dialog} from '@headlessui/react';\nimport styles from './primary-dialog.module.css';\n\ninterface DialogProps {\n    isOpen: boolean;\n    onClose: () => void;\n    title: string;\n    children: React.ReactNode;\n}\n\nexport const PrimaryDialog: React.FC<DialogProps> = ({isOpen, onClose, title, children}) => {\n    return (\n        <Dialog open={isOpen} onClose={onClose} className={styles['primary-dialog']}>\n            <div className={styles['primary-dialog-panel']}>\n                <Dialog.Title className={styles['primary-dialog-title']}>{title}</Dialog.Title>\n                {children}\n                <button onClick={onClose} className={styles['primary-button']}>Close</button>\n            </div>\n        </Dialog>\n    );\n};",".primary-dialog {\n    background-color: var(--background-secondary); /* Soft sky blue */\n    border-radius: 8px;\n    max-width: var(--modal-max-width);\n    min-width: var(--modal-min-width);\n    width: 80vw;\n    padding: 20px;\n    position: fixed; /* Keep it fixed on the screen */\n    top: 50%; /* Position it in the vertical center */\n    left: 50%; /* Position it in the horizontal center */\n    transform: translate(-50%, -50%); /* Offset it by half its own width and height */\n    height: 80vh;\n    display: flex;\n    justify-items: center;\n    justify-content: center;\n    z-index: 10;\n}\n\n/* Primary Dialog Panel Styles */\n.primary-dialog-panel {\n    background-color: var(--background-secondary); /* Background color for the panel */\n    border-radius: 8px; /* Rounded corners */\n    max-width: var(--modal-max-width); /* Use your defined max width */\n    width: 100%; /* Ensure it uses most of the width available, responsive */\n    height: 100%; /* Allow it to grow based on content */\n    max-height: 80vh; /* Maximum height */\n    overflow-y: auto; /* Enable vertical scrolling if content exceeds height */\n    display: flex; /* Use flexbox for layout */\n    flex-direction: column; /* Stack child elements vertically */\n    position: relative; /* Make position relative for absolute child elements */\n    z-index: 20; /* Ensure it appears above backdrop */\n    text-align: center;\n}\n\n.primary-dialog-title {\n    text-align: center;\n}","import React, {Fragment} from 'react';\nimport {Listbox} from '@headlessui/react';\nimport styles from './primary-dropdown.module.css';\n\ninterface DropdownProps {\n    options: string[];\n    selected: string;\n    onChange: (value: string) => void;\n}\n\nexport const PrimaryDropdown: React.FC<DropdownProps> = ({options, selected, onChange}) => {\n    return (\n        <Listbox value={selected} onChange={onChange}>\n            <div className=\"relative\">\n                <Listbox.Button className={styles['primary-dropdown']}>{selected}</Listbox.Button>\n                <Listbox.Options className=\"absolute z-10\">\n                    {options.map((option) => (\n                        <Listbox.Option key={option} value={option} as={Fragment}>\n                            {({focus}) => (\n                                <li className={`cursor-pointer ${focus ? 'bg-gray-200' : ''}`}>\n                                    {option}\n                                </li>\n                            )}\n                        </Listbox.Option>\n                    ))}\n                </Listbox.Options>\n            </div>\n        </Listbox>\n    );\n};",".primary-dropdown {\n    background-color: white;\n    border: 2vw var(--border-color); /* Bright blue border */\n    border-radius: 4px;\n    padding: var(--button-padding);\n    width: 100%;\n    cursor: pointer;\n}","import React from 'react';\nimport Link, {LinkProps} from 'next/link';\nimport styles from './primary-link.module.css';\n\ninterface PrimaryLinkProps extends LinkProps {\n    className?: string;\n    children: React.ReactNode;\n    onClick?: () => void; // Optional prop for additional click functionality\n}\n\nexport const PrimaryLink: React.FC<PrimaryLinkProps> = ({\n                                                            children,\n                                                            className,\n                                                            onClick,\n                                                            ...props\n                                                        }) => {\n    return (\n        <Link {...props} className={`${styles['link']} ${className ?? ''}`} onClick={onClick}>\n            {children}\n        </Link>\n    );\n};","/*.link {*/\n/*    color: var(--link-color);*/\n/*    text-decoration: none; !* Remove underline *!*/\n/*    transition: color 0.3s ease, background 0.3s ease, transform 0.2s ease; !* Smooth color and transform on hover *!*/\n/*    font-weight: 500; !* Slightly increase font weight *!*/\n/*    position: relative; !* Position for pseudo-elements *!*/\n/*}*/\n\n/*.link:hover {*/\n/*    color: var(--foreground-secondary); !* Color on hover *!*/\n/*    background-color: rgba(0, 0, 0, 0.1); !* Light background on hover *!*/\n/*    transform: translateY(-2px); !* Slight lift on hover *!*/\n/*}*/\n\n/*!* Add underline on hover (optional) *!*/\n/*.link::after {*/\n/*    content: '';*/\n/*    display: block;*/\n/*    width: 100%;*/\n/*    height: 2px; !* Height of your underline *!*/\n/*    background-color: var(--foreground-secondary); !* Color for underline *!*/\n/*    position: absolute; !* Position at the bottom *!*/\n/*    left: 0; !* Align to the left *!*/\n/*    bottom: -2px; !* Position below text *!*/\n/*    transform: scaleX(0); !* Hidden initially *!*/\n/*    transition: transform 0.3s ease; !* Smooth scale transition *!*/\n/*}*/\n\n/*.link:hover::after {*/\n/*    transform: scaleX(1); !* Scale to full width on hover *!*/\n/*}*/\n\n\n/*!* Responsive Considerations *!*/\n/*@media (max-width: 768px) {*/\n/*    .link*/\n/*}*/\n","import React from 'react';\nimport {Dialog} from '@headlessui/react';\nimport styles from './primary-modal.module.css';\n\ninterface ModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    title: string;\n    children: React.ReactNode;\n}\n\nexport const PrimaryModal: React.FC<ModalProps> = ({isOpen, onClose, title, children}) => {\n    return (\n        <Dialog open={isOpen} onClose={onClose}\n                className={`fixed inset-0 z-10 overflow-y-auto ${styles['primary-modal']}`}>\n            <div className=\"modal-content\">\n                <Dialog.Title>{title}</Dialog.Title>\n                <div>{children}</div>\n                <button onClick={onClose} className=\"custom-button\">Close</button>\n            </div>\n        </Dialog>\n    );\n};",".primary-modal {\n    background-color: white;\n    border-radius: 8px;\n    max-width: var(--modal-max-width);\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n    padding: 2rem;\n}","import {Popover, PopoverButton, PopoverPanel} from '@headlessui/react'\n\n\ninterface PopoverProps {\n    title: string;\n    children: React.ReactNode;\n}\n\nexport function PrimaryPopover({title, children}: PopoverProps) {\n    return (\n        <Popover className=\"relative\">\n            <PopoverButton>{title}</PopoverButton>\n            <PopoverPanel anchor=\"bottom\" className=\"flex flex-col\">\n                {children}\n            </PopoverPanel>\n        </Popover>\n    )\n}","import {Description, Field, Select} from '@headlessui/react'\nimport React, {ChangeEventHandler} from \"react\";\nimport {PrimaryCard} from \"@/index\"\n\n\ninterface SelectProps {\n    options: string[];\n    description: string;\n    onChange: ChangeEventHandler<HTMLSelectElement>;\n}\n\n\nexport const PrimarySelect: React.FC<SelectProps> = ({options, description, onChange}) => {\n    return (\n        <PrimaryCard>\n\n\n            <Field>\n                <Description>{description}</Description>\n                <Select name=\"status\" aria-label=\"Project status\" onChange={onChange}>\n                    {options.map((option) => (\n                        <option key={option} value={option}>\n                            {option}\n                        </option>\n                    ))}\n                </Select>\n            </Field>\n        </PrimaryCard>\n\n    )\n}","import React, {MouseEventHandler} from 'react';\nimport {Tab, TabGroup, TabList, TabPanel, TabPanels} from '@headlessui/react';\nimport styles from './primary-tabs.module.css';\n\ninterface TabsProps {\n    tabs: string[];\n    children: React.ReactNode[];\n    onClick?: MouseEventHandler<HTMLButtonElement>;\n}\n\nexport const PrimaryTabs: React.FC<TabsProps> = ({tabs, children, onClick}) => {\n    return (\n        <TabGroup>\n            <TabList className={styles['primary-tabs']}>\n                {tabs.map((tab, index) => (\n                    <Tab key={index} className={styles['primary-tab']} onClick={onClick}>\n                        {tab}\n                    </Tab>\n                ))}\n            </TabList>\n            <TabPanels>\n                {children.map((content, index) => (\n                    <TabPanel key={index} className=\"tab-panel\">\n                        {content}\n                    </TabPanel>\n                ))}\n            </TabPanels>\n        </TabGroup>\n    );\n};",".primary-tabs {\n    display: flex;\n    border-bottom: 2px solid var(--foreground-secondary); /* Bright blue border */\n}\n\n.primary-tab {\n    padding: var(--button-padding);\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n}\n\n.primary-tab:hover {\n    background-color: var(--foreground-tertiary); /* Bold sky blue on hover */\n}\n"],"mappings":"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","names":["React","React","React","React","React","React","React","React","React","React","React","React","React","Dialog","React","Dialog","React","React","React","React"]}