{"version":3,"sources":["../src/components/Button/primary-button.tsx","../src/components/Accordion/primary-accordion.tsx","../src/components/Card/primary-card.tsx","../src/components/Dialog/primary-dialog.tsx","../src/components/Dropdown/primary-dropdown.tsx","../src/components/Link/primary-link.tsx","../src/components/Modal/primary-modal.tsx","../src/components/Popover/primary-popover.tsx","../src/components/Select/primary-select.tsx","../src/components/Tabs/primary-tabs.tsx"],"sourcesContent":["import {Button} from '@headlessui/react';\nimport React from 'react';\nimport styles from './primary-button.module.css';\n\ninterface ButtonProps {\n    children: React.ReactNode;\n    onClick?: () => void;\n    className?: string;\n}\n\nexport const PrimaryButton: React.FC<ButtonProps> = ({children, onClick, className = ''}) => {\n    return (\n        <Button\n            onClick={onClick}\n            className={`${styles['hui-primary-button']} ${className}`}\n        >\n            {children}\n        </Button>\n    );\n};","import React from 'react';\nimport {Disclosure} from '@headlessui/react';\nimport styles from './primary-accordion.module.css';\n\ninterface AccordionItemProps {\n    title: string;\n    children: React.ReactNode;\n}\n\nexport const AccordionItem: React.FC<AccordionItemProps> = ({title, children}) => (\n    <Disclosure>\n        {({open}) => (\n            <div className={styles['hui-primary-accordion'] + (open ? ' ' + styles.open : '')}>\n                <Disclosure.Button className={styles['hui-primary-accordion-title']}>\n                    <p>{title}</p>\n                    <p className={styles.accordionArrow}>\n                        {open ? '▲' : '▼'}\n                    </p>\n                </Disclosure.Button>\n                <Disclosure.Panel className={styles['hui-primary-accordion-content']}>\n                    {children}\n                </Disclosure.Panel>\n            </div>\n        )}\n    </Disclosure>\n);\n\nexport const PrimaryAccordion: React.FC<{ children: React.ReactNode }> = ({children}) => {\n    return <div>{children}</div>;\n};","import React from 'react';\nimport styles from './primary-card.module.css';\n\ninterface PrimaryCardProps {\n    width?: string;\n    height?: string;\n    children: React.ReactNode;\n}\n\nexport const PrimaryCard: React.FC<PrimaryCardProps> = ({width, height, children}) => {\n    return (\n        <div\n            className={styles['hui-primary-card']}\n            style={{width, height}}\n        >\n            {children}\n        </div>\n    );\n};","import React from 'react';\nimport {Dialog} from '@headlessui/react';\nimport styles from './primary-dialog.module.css';\nimport {PrimaryButton} from \"@/components/Button/primary-button\";\n\ninterface DialogProps {\n    isOpen: boolean;\n    onClose: () => void;\n    title: string;\n    children: React.ReactNode;\n}\n\nexport const PrimaryDialog: React.FC<DialogProps> = ({isOpen, onClose, title, children}) => {\n    return (\n        <Dialog open={isOpen} onClose={onClose} className={styles['hui-primary-dialog']}>\n            <div className={styles['hui-primary-dialog-panel']}>\n                <Dialog.Title className={styles['hui-primary-dialog-title']}>{title}</Dialog.Title>\n                {children}\n                <PrimaryButton onClick={onClose}>Close</PrimaryButton>\n            </div>\n        </Dialog>\n    );\n};","import React, {Fragment} from 'react';\nimport {Listbox} from '@headlessui/react';\nimport styles from './primary-dropdown.module.css';\n\ninterface DropdownProps {\n    options: string[];\n    selected: string;\n    onChange: (value: string) => void;\n}\n\nexport const PrimaryDropdown: React.FC<DropdownProps> = ({options, selected, onChange}) => {\n    return (\n        <Listbox value={selected} onChange={onChange}>\n            <div className=\"relative\">\n                <Listbox.Button className={styles['hui-primary-dropdown']}>{selected}</Listbox.Button>\n                <Listbox.Options className=\"absolute z-10\">\n                    {options.map((option) => (\n                        <Listbox.Option key={option} value={option} as={Fragment}>\n                            {({focus}) => (\n                                <li className={`cursor-pointer ${focus ? 'bg-gray-200' : ''}`}>\n                                    {option}\n                                </li>\n                            )}\n                        </Listbox.Option>\n                    ))}\n                </Listbox.Options>\n            </div>\n        </Listbox>\n    );\n};","import React from 'react';\nimport Link, {LinkProps} from 'next/link';\nimport styles from './primary-link.module.css';\n\ninterface PrimaryLinkProps extends LinkProps {\n    className?: string;\n    children: React.ReactNode;\n    onClick?: () => void; // Optional prop for additional click functionality\n}\n\nexport const PrimaryLink: React.FC<PrimaryLinkProps> = ({\n                                                            children,\n                                                            className,\n                                                            onClick,\n                                                            ...props\n                                                        }) => {\n    return (\n        <Link {...props} className={`${styles.link} ${className ?? ''}`} onClick={onClick}>\n            {children}\n        </Link>\n    );\n};","import React from 'react';\nimport {Dialog} from '@headlessui/react';\nimport styles from './primary-modal.module.css';\nimport {PrimaryButton} from \"@/components/Button/primary-button\";\n\ninterface ModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    title: string;\n    children: React.ReactNode;\n}\n\nexport const PrimaryModal: React.FC<ModalProps> = ({isOpen, onClose, title, children}) => {\n    return (\n        <Dialog open={isOpen} onClose={onClose}\n                className={`fixed inset-0 z-10 overflow-y-auto ${styles['hui-primary-modal']}`}>\n            <div className=\"modal-content\">\n                <Dialog.Title>{title}</Dialog.Title>\n                <div>{children}</div>\n                <PrimaryButton onClick={onClose}>Close</PrimaryButton>\n            </div>\n        </Dialog>\n    );\n};","import {Popover, PopoverButton, PopoverPanel} from '@headlessui/react'\n\n\ninterface PopoverProps {\n    title: string;\n    children: React.ReactNode;\n}\n\nexport function PrimaryPopover({title, children}: PopoverProps) {\n    return (\n        <Popover className=\"relative\">\n            <PopoverButton>{title}</PopoverButton>\n            <PopoverPanel anchor=\"bottom\" className=\"flex flex-col\">\n                {children}\n            </PopoverPanel>\n        </Popover>\n    )\n}","import {Description, Field, Select} from '@headlessui/react'\nimport React, {ChangeEventHandler} from \"react\";\nimport {PrimaryCard} from \"@/index\"\n\n\ninterface SelectProps {\n    options: string[];\n    description: string;\n    onChange: ChangeEventHandler<HTMLSelectElement>;\n}\n\n\nexport const PrimarySelect: React.FC<SelectProps> = ({options, description, onChange}) => {\n    return (\n        <PrimaryCard>\n\n\n            <Field>\n                <Description>{description}</Description>\n                <Select name=\"status\" aria-label=\"Project status\" onChange={onChange}>\n                    {options.map((option) => (\n                        <option key={option} value={option}>\n                            {option}\n                        </option>\n                    ))}\n                </Select>\n            </Field>\n        </PrimaryCard>\n\n    )\n}","import React, {MouseEventHandler} from 'react';\nimport {Tab, TabGroup, TabList, TabPanel, TabPanels} from '@headlessui/react';\nimport styles from './primary-tabs.module.css';\n\ninterface TabsProps {\n    tabs: string[];\n    children: React.ReactNode[];\n    onClick?: MouseEventHandler<HTMLButtonElement>;\n}\n\nexport const PrimaryTabs: React.FC<TabsProps> = ({tabs, children, onClick}) => {\n    return (\n        <TabGroup>\n            <TabList className={styles['hui-primary-tabs']}>\n                {tabs.map((tab, index) => (\n                    <Tab key={index} className={styles['hui-primary-tab']} onClick={onClick}>\n                        {tab}\n                    </Tab>\n                ))}\n            </TabList>\n            <TabPanels>\n                {children.map((content, index) => (\n                    <TabPanel key={index} className=\"tab-panel\">\n                        {content}\n                    </TabPanel>\n                ))}\n            </TabPanels>\n        </TabGroup>\n    );\n};"],"mappings":"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","names":["React","React","styles","React","React","styles","React","styles","React","styles","React","styles","React","styles","React","styles","React","Dialog","styles","React","Dialog","styles","React","React","React","styles"]}